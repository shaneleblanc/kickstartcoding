1. What might be the advantages of MVC, the "keep stuff separate" philosophy?

2. Define the following terms in your own words: Django Model, Django View,
Django Template

3. Can you explain in your own words a "django project" vs a "django app"?

4. Discuss which category each of the following code goes into (either "model",
"view", or "template"):
- Code to make a HTML list of dogs
- Code which decides if a dog is too old to be adopted
- Code that stores a dog adoption record into the database
- Code that checks if a user is logged out to prevent them from continuing
- Code that ensures email addresses in the database look valid with "@" in them
- Code which renders HTML showing a dog's adoption history






Key Terms:

* model - Validates data in the database. Stores and retrieves database data.
* view - Code that fetches data and makes responses based on requests
  coming in. Contains the "business logic": Makes all the decisions.
* template - e.g. Jinja or Django templates, present data with HTML and
  CSS

